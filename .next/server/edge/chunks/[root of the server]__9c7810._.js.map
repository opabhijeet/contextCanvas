{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/middleware.ts"],"sourcesContent":["import { clerkMiddleware } from '@clerk/nextjs/server';\r\n\r\nimport { S3Client } from \"@aws-sdk/client-s3\";\r\nimport multer from \"multer\";\r\nimport multerS3 from \"multer-s3\";\r\nimport { Request } from \"express\"; // Import Request type from express\r\n\r\nexport default clerkMiddleware(async (auth, req) => {\r\n  await auth.protect();\r\n});\r\n \r\nexport const config = {\r\n  matcher: [\r\n    '/((?!.*\\\\..*|_next).*)', // Don't run middleware on static files\r\n    '/', // Run middleware on index page\r\n    '/(api|trpc)(.*)'], // Run middleware on API routes\r\n};\r\n\r\n\r\n// Initialize S3 Client\r\nconst s3Client = new S3Client({\r\n    region: 'us-east-1', // Ensure the region is correct\r\n    credentials: {\r\n        accessKeyId: process.env.AWS_ACCESS_KEY_ID as string, // Cast to string\r\n        secretAccessKey: process.env.AWS_SECRET_ACCESS_KEY as string, // Cast to string\r\n    },\r\n});\r\n\r\n// Configure Multer with S3 storage\r\nexport const upload = multer({\r\n    storage: multerS3({\r\n        s3: s3Client,\r\n        bucket: process.env.S3_BUCKET_NAME as string, // Cast to string\r\n        metadata: (req: Request, file: Express.Multer.File, cb: (error: any, metadata: any) => void) => {\r\n            cb(null, { fieldName: file.fieldname });\r\n        },\r\n        key: (req: Request, file: Express.Multer.File, cb: (error: any, key: string) => void) => {\r\n            cb(null, `identity-documents/${Date.now()}_${file.originalname}`);\r\n        },\r\n    }),\r\n    limits: { fileSize: 5 * 1024 * 1024 }, // 5 MB limit\r\n});"],"names":[],"mappings":";;;;;AAGA;AACA;AAJA;AAEA;;;;;uCAKe,CAAA,GAAA,6KAAA,CAAA,kBAAe,AAAD,EAAE,OAAO,MAAM;IAC1C,MAAM,KAAK,OAAO;AACpB;AAEO,MAAM,SAAS;IACpB,SAAS;QACP;QACA;QACA;KAAkB;AACtB;AAGA,uBAAuB;AACvB,MAAM,WAAW,IAAI,sLAAA,CAAA,WAAQ,CAAC;IAC1B,QAAQ;IACR,aAAa;QACT,aAAa,QAAQ,GAAG,CAAC,iBAAiB;QAC1C,iBAAiB,QAAQ,GAAG,CAAC,qBAAqB;IACtD;AACJ;AAGO,MAAM,SAAS,CAAA,GAAA,+HAAA,CAAA,UAAM,AAAD,EAAE;IACzB,SAAS,CAAA,GAAA,qIAAA,CAAA,UAAQ,AAAD,EAAE;QACd,IAAI;QACJ,QAAQ,QAAQ,GAAG,CAAC,cAAc;QAClC,UAAU,CAAC,KAAc,MAA2B;YAChD,GAAG,MAAM;gBAAE,WAAW,KAAK,SAAS;YAAC;QACzC;QACA,KAAK,CAAC,KAAc,MAA2B;YAC3C,GAAG,MAAM,CAAC,mBAAmB,EAAE,KAAK,GAAG,GAAG,CAAC,EAAE,KAAK,YAAY,EAAE;QACpE;IACJ;IACA,QAAQ;QAAE,UAAU,IAAI,OAAO;IAAK;AACxC"}},
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}